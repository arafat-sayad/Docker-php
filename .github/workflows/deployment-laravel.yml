name: Deploy to Amazon ECS

on:
  push:
    branches:
      - custom-product
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push-ecr-image:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Create env file
        run: |
          touch .env
          echo "${{ secrets.SERVER_ENV_PROD }}" > .env
          cat .env
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ secrets.VERSION_TAG }}
          IMAGE_TAG_WORKER: ${{ secrets.VERSION_TAG_WORKER }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_WORKER -f worker.Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_WORKER
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_WORKER"

  Continuous-Deployment:
    needs: build-and-push-ecr-image
    runs-on: [aws-laravel]
    steps:
      - name: Check current user
        run: |
          if [ "$(whoami)" = "ubuntu" ]; then
             echo "User is ubuntu"
             sudo su
          else
             echo "User is not ubuntu"
          fi

      - name: Change the directory and Deploy the application
        run: |
          cd ${{ secrets.AWS_DIRECTORY }}
          sudo $(aws ecr get-login --no-include-email --region ${{ secrets.AWS_REGION }})
          sudo docker-compose down
          sudo docker rmi ${{ secrets.APP_IMAGES }}
          sudo docker rmi ${{ secrets.WORKER_IMAGES }}
          sudo docker-compose pull
      - name: Final stage
        run: |
          cd ${{ secrets.AWS_DIRECTORY }}
          sudo ./deploy.sh

