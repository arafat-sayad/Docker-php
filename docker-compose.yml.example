version: '3'
services:
  nginx:
    image: nginx:latest
    container_name: rvwx_nginx
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./.docker/nginx/app/local.conf:/etc/nginx/conf.d/default.conf
      - ./.data/nginx/logs:/var/log/nginx
      - ./app:/var/www/app
    ports:
      - 81:81
    depends_on:
      - app
    networks:
      - reviewx_saas_network
    environment:
      - X_SERVER_TYPE=nginx

  app:
    build:
      context: .
      dockerfile: .docker/app/Dockerfile
    container_name: rvwx_app
    volumes:
      - ./app:/var/www/app
    restart: always
    networks:
      - reviewx_saas_network
    environment:
      - X_SERVER_TYPE=app
#  web:
#    build:
#      context: .
#      dockerfile: .docker/web/Dockerfile
#    container_name: rvwx_web
#    stdin_open: true
#    volumes:
#      - ./web:/app
#      - /app/node_modules
#      - /app/.next
#    env_file:
#      - ./web/.env
#    networks:
#      - reviewx_saas_network
#    environment:
#      - X_SERVER_TYPE=web

  redis:
    image: redis:latest
    container_name: rvwx_redis
    ports:
      - "6379:6379"
    volumes:
      - ./.data/redis:/data
    entrypoint: redis-server --appendonly yes
    restart: always
    networks:
      - reviewx_saas_network

  worker:
    build:
      context: .
      dockerfile: .docker/worker/Dockerfile
    container_name: rvwx_worker
    volumes:
      - ./app:/var/www/app
      - ./.data/logs/worker:/var/log
    networks:
      - reviewx_saas_network
    environment:
      - X_SERVER_TYPE=worker

  rvx_database:
    container_name: rvx_database
    image: postgres:14
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      PGDATA: /data/postgres
    volumes:
      - ./.data/pgdata:/data/postgres
     # - ./.docker/postgres/create_admin_db.sql:/docker-entrypoint-initdb.d/create_admin_db.sql
    ports:
      - "5432:5432"
    restart: always
    networks:
      - reviewx_saas_network

  rvwx_mailhog:
    image: mailhog/mailhog
    container_name: rvwx_mailhog
    logging:
      driver: 'none'
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - reviewx_saas_network

  certbot:
    image: certbot/certbot
    container_name: rvwx_certbot
    restart: unless-stopped
    volumes:
      - ./.data/certs/certbot/conf:/etc/letsencrypt
      - ./.data/certs/certbot/www:/var/www/certbot
    networks:
      - reviewx_saas_network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  pgdata:
  redis:
    driver: local

networks:
  reviewx_saas_network:
    driver: bridge
